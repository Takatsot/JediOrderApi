// <auto-generated />
using System;
using JediOrderApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JediOrderApi.Migrations
{
    [DbContext(typeof(JediOrderDbContext))]
    [Migration("20241025172840_Updated Review Primary Key")]
    partial class UpdatedReviewPrimaryKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JediOrderApi.Models.Domain.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SizeInBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("UserCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("JediOrderApi.Models.Domain.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6877),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6887),
                            Description = "A classic Italian pasta dish made with eggs, cheese, pancetta, and pepper.",
                            ImageUrl = "Spaghetti-image.jpg",
                            IsRetired = false,
                            Name = "Spaghetti Carbonara",
                            Price = 12.99m,
                            Type = "Dish",
                            UserCreated = "Admin",
                            UserModified = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6891),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6891),
                            Description = "Crisp romaine lettuce and croutons dressed with parmesan cheese, lemon juice, olive oil, and Worcestershire sauce.",
                            ImageUrl = "Caesar-image.jpg",
                            IsRetired = false,
                            Name = "Caesar Salad",
                            Price = 9.99m,
                            Type = "Dish",
                            UserCreated = "Admin",
                            UserModified = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6894),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6894),
                            Description = "A refreshing soft drink with a unique taste that has been enjoyed for over a century.",
                            ImageUrl = "Coke-image.jpg",
                            IsRetired = false,
                            Name = "Coca Cola",
                            Price = 1.99m,
                            Type = "Drink",
                            UserCreated = "Admin",
                            UserModified = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6897),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(6897),
                            Description = "Freshly squeezed orange juice, a perfect start to your day.",
                            ImageUrl = "Orange-image.jpg",
                            IsRetired = false,
                            Name = "Orange Juice",
                            Price = 2.49m,
                            Type = "Drink",
                            UserCreated = "Admin",
                            UserModified = "Admin"
                        });
                });

            modelBuilder.Entity("JediOrderApi.Models.Domain.Reviews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("bit");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReviewsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserModified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductsID");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Hi, I had this meal and it was so delicious! Please keep serving it hot. I was very happy.",
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(7020),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(7021),
                            IsRetired = false,
                            ProductsID = 1,
                            Rating = 5,
                            ReviewTitle = "Delicious Meal With Extra Cheese",
                            ReviewsID = new Guid("563837c4-9f6e-4183-9ede-3bf4c196575a"),
                            UserCreated = "Noma",
                            UserId = 1,
                            UserModified = "Noma"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "The meal was cold and lacked flavor. The cheese was too much and overpowered everything. Not impressed.",
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(7024),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(7025),
                            IsRetired = false,
                            ProductsID = 1,
                            Rating = 2,
                            ReviewTitle = "Not so great",
                            ReviewsID = new Guid("b3809d67-9346-403c-b8df-fd8e0ba1bdc1"),
                            UserCreated = "Bongani",
                            UserId = 2,
                            UserModified = "Bongani"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "This drink was amazing! I loved the refreshing taste and the blend of flavors was perfect. Will definitely buy again.",
                            DateCreated = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(7028),
                            DateModified = new DateTime(2024, 10, 25, 19, 28, 39, 819, DateTimeKind.Local).AddTicks(7028),
                            IsRetired = false,
                            ProductsID = 2,
                            Rating = 5,
                            ReviewTitle = "Fantastic Experience",
                            ReviewsID = new Guid("d838305f-b761-4c3e-aae1-34a3a346ece4"),
                            UserCreated = "Sihle",
                            UserId = 3,
                            UserModified = "Sihle"
                        });
                });

            modelBuilder.Entity("JediOrderApi.Models.Domain.Reviews", b =>
                {
                    b.HasOne("JediOrderApi.Models.Domain.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
